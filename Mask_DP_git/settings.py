# -*- coding: utf-8 -*-
"""
Django settings for Mask_DP project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import time

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# from utilslibrary.system_constant import Constant

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ygb096h)xz2j7hcnj6v7y2k6cz0q9p$dy93ml*9f_*flkqc+j('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_apscheduler',
    'tooling_form',
    'jdv',
    'system.apps.SystemConfig',
    'utilslibrary',
    'system.templatetags',
    # 'debug_toolbar',
    'machine',
    'infotree',
    'making',
    'api',
    'iems',
    'catalog',
    'django_middleware_global_request',
    'maintain',
    'sap_webservice',
    'query_system',
    'semi_automatic'
]

MIDDLEWARE = [
    # 'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'utilslibrary.middleware.request_blocking_middleware.RequestBlockingMiddleware',
    'utilslibrary.middleware.global_request_middleware.GlobalRequestMiddleware',
    'django_middleware_global_request.middleware.GlobalRequestMiddleware',
    'utilslibrary.middleware.auth_check_middleware.AuthCheckMiddleWare',
    # 'utilslibrary.middleware.exception_middleware.ExceptionMiddleWare',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
]
''
import dwebsocket

MIDDLEWARE_CLASSES = ['dwebsocket.middleware.WebSocketMiddleware']

WEBSOCKET_ACCEPT_ALL = True

ROOT_URLCONF = 'Mask_DP.urls'

TEMPLATES = [
    {
        # 'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'BACKEND': 'django.template.backends.jinja2.Jinja2'
        ,
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'environment': 'jinja2_env.environment',
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'utilslibrary.global.global_setting',
            ],
        },
    },
]

WSGI_APPLICATION = 'Mask_DP.wsgi.application'

# prod, test, dev
env_param = "dev"

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

if env_param == "prod":
    # DB
    DATABASES_NAME = 'dp_phase1'
    DATABASES_USER = 'root'
    DATABASES_PASSWORD = 'mdp123456'
    DATABASES_HOST = '172.16.20.230'
    DATABASES_PORT = '3306'

    # TEMPLATE_FILE_GENERATE_PATH
    TEMPLATE_FILE_GENERATE_PATH = "/qxic/qxic/MaskData/Product/"

    # DEVICE_INFO_FILE_BASE_PATH
    DEVICE_INFO_FILE_BASE_PATH = '/qxic/qxic/MaskData/Product/'

    # Catalog
    CATALOG_LOCAL_PATH = "/qxic/qxic/MaskData/.Mask_DP_Catalog_Data/prod/"
    CATALOG_FTP_SERVER_SSH_PATH = "/DTS/Writer/"
    CATALOG_FTP_SERVER_PATH = "/Writer/"
    CATALOG_FTP_SERVER_CONN_CONFIG = {"CATALOG_FTP_HOST": "172.16.131.201",
                                      "CATALOG_FTP_PORT": 21,
                                      "CATALOG_FTP_ACCOUNT": "mdp",
                                      "CATALOG_FTP_PASSWORD": "!"}
    # ----------MES info--------------------------------------
    MES_URL = "http://10.3.16.30:17101/CS_PPTServiceManager/thePPTServiceManager"
    MES_USER = {'userID': 'DP_SYS', 'password': 'es1xttAQ'}

elif env_param == "test":
    # DB
    DATABASES_NAME = 'mask_dp_test'
    DATABASES_USER = 'root'
    DATABASES_PASSWORD = '!123456Qxic'
    DATABASES_HOST = '172.16.20.241'
    DATABASES_PORT = '3306'

    # TEMPLATE_FILE_GENERATE_PATH
    TEMPLATE_FILE_GENERATE_PATH = "/qxic/qxic/MaskData/Engineering/example/"

    # DEVICE_INFO_FILE_BASE_PATH
    DEVICE_INFO_FILE_BASE_PATH = '/qxic/qxic/MaskData/Engineering/example/'

    # Catalog
    CATALOG_LOCAL_PATH = "/qxic/qxic/MaskData/.Mask_DP_Catalog_Data/test/"
    CATALOG_FTP_SERVER_SSH_PATH = "/DTS/test/PRODUCT/"
    CATALOG_FTP_SERVER_PATH = "/PRODUCT/"
    CATALOG_FTP_SERVER_CONN_CONFIG = {"CATALOG_FTP_HOST": "172.16.131.201",
                                      "CATALOG_FTP_PORT": 21,
                                      "CATALOG_FTP_ACCOUNT": "rdftptest",
                                      "CATALOG_FTP_PASSWORD": "123456"}
    # ----------MES info--------------------------------------
    MES_URL = "http://10.3.10.30:27111/CS_PPTServiceManager/thePPTServiceManager"
    MES_USER = {'userID': 'DP_Test', 'password': 'utfU`QE'}

elif env_param == "dev":
    # DB
    DATABASES_NAME = 'dp_phase1'
    DATABASES_USER = 'root'
    DATABASES_PASSWORD = 'mdp123456'
    DATABASES_HOST = '172.16.50.230'
    DATABASES_PORT = '3306'

    # TEMPLATE_FILE_GENERATE_PATH
    TEMPLATE_FILE_GENERATE_PATH = "/qxic/qxic/MaskData/Engineering/example/"

    # DEVICE_INFO_FILE_BASE_PATH
    DEVICE_INFO_FILE_BASE_PATH = '/qxic/qxic/MaskData/Engineering/example/'

    # Catalog
    CATALOG_LOCAL_PATH = "/qxic/qxic/MaskData/.Mask_DP_Catalog_Data/test/"
    CATALOG_FTP_SERVER_SSH_PATH = "/DTS/test/PRODUCT/"
    CATALOG_FTP_SERVER_PATH = "/DTS/test/PRODUCT/"
    CATALOG_FTP_SERVER_CONN_CONFIG = {"CATALOG_FTP_HOST": "172.16.131.201",
                                      "CATALOG_FTP_PORT": 21,
                                      "CATALOG_FTP_ACCOUNT": "rdftptest",
                                      "CATALOG_FTP_PASSWORD": "123456"}
    # ----------MES info--------------------------------------
    MES_URL = "http://10.3.10.30:27111/CS_PPTServiceManager/thePPTServiceManager"
    MES_USER = {'userID': 'DP_Test', 'password': 'utfU`QE'}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': DATABASES_NAME,
        'USER': DATABASES_USER,
        'PASSWORD': DATABASES_PASSWORD,
        'HOST': DATABASES_HOST,
        'PORT': DATABASES_PORT
    }
}

GLOBAL_PARAM = {
    # TEMPLATE_FILE_GENERATE_PATH
    'TEMPLATE_FILE_GENERATE_PATH': TEMPLATE_FILE_GENERATE_PATH,

    # DEVICE_INFO_FILE_BASE_PATH
    'DEVICE_INFO_FILE_BASE_PATH': DEVICE_INFO_FILE_BASE_PATH,

    # Catalog
    'CATALOG_LOCAL_PATH': CATALOG_LOCAL_PATH,
    'CATALOG_FTP_SERVER_SSH_PATH': CATALOG_FTP_SERVER_SSH_PATH,
    'CATALOG_FTP_SERVER_PATH': CATALOG_FTP_SERVER_PATH,
    'CATALOG_FTP_SERVER_CONN_CONFIG': CATALOG_FTP_SERVER_CONN_CONFIG
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/


LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'collect_static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static/'),
]

# 跨域增加忽略
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = (
    'http://192.168.120.145:8001',
    'http://172.16.20.226:8089',
)

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
    'VIEW',
)

CORS_ALLOW_HEADERS = (
    'Access-Control-Allow-Credentials',
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
)

SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # 引擎（默认）
SESSION_COOKIE_NAME = "maskdpsessionid"  # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）
SESSION_COOKIE_PATH = "/"  # Session的cookie保存的路径（默认）
SESSION_COOKIE_DOMAIN = None  # Session的cookie保存的域名（默认）
SESSION_COOKIE_SECURE = False  # 是否Https传输cookie（默认）
SESSION_COOKIE_HTTPONLY = True  # 是否Session的cookie只支持http传输（默认）
SESSION_COOKIE_AGE = 1800  # Session的cookie失效日期（30分钟）（默认）
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # 是否关闭浏览器使得Session过期（默认）
SESSION_SAVE_EVERY_REQUEST = True  # 是否每次请求都保存Session，默认修改之后才保存（默认）

# project name
PROJECT_NAME = 'Mask_DP'

# cur_path = os.path.dirname(os.path.realpath(__file__))  # log_path是存放日志的路径
cur_path = os.path.abspath(os.path.dirname(__file__)).split(PROJECT_NAME)[0]  # 获得项目同级目录
log_path = os.path.join(os.path.dirname(cur_path), PROJECT_NAME + '_logs')
if not os.path.exists(log_path): os.mkdir(log_path)  # 如果不存在这个logs文件夹，就自动创建一个

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        # 日志格式
        'standard': {
            'format': '[%(asctime)s] [%(filename)s:%(lineno)d] [%(module)s:%(funcName)s] '
                      '[%(levelname)s]- %(message)s'},
        'simple': {  # 简单格式
            'format': '%(levelname)s %(message)s'
        },
    },
    # 过滤
    'filters': {
    },
    # 定义具体处理日志的方式
    'handlers': {
        # 默认记录所有日志
        'default': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(log_path, 'all-{}.log'.format(time.strftime('%Y-%m-%d'))),
            'maxBytes': 1024 * 1024 * 5,  # 文件大小
            'backupCount': 5,  # 备份数
            'formatter': 'standard',  # 输出格式
            'encoding': 'utf-8',  # 设置默认编码，否则打印出来汉字乱码
        },
        # 输出错误日志
        'error': {
            'level': 'ERROR',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(log_path, 'error-{}.log'.format(time.strftime('%Y-%m-%d'))),
            'maxBytes': 1024 * 1024 * 5,  # 文件大小
            'backupCount': 5,  # 备份数
            'formatter': 'standard',  # 输出格式
            'encoding': 'utf-8',  # 设置默认编码
        },
        # 输出警告日志
        'warn': {
            'level': 'WARNING',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(log_path, 'warn-{}.log'.format(time.strftime('%Y-%m-%d'))),
            'maxBytes': 1024 * 1024 * 5,  # 文件大小
            'backupCount': 5,  # 备份数
            'formatter': 'standard',  # 输出格式
            'encoding': 'utf-8',  # 设置默认编码
        },
        # 控制台输出
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
        # 输出info日志
        'info': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(log_path, 'info-{}.log'.format(time.strftime('%Y-%m-%d'))),
            'maxBytes': 1024 * 1024 * 5,
            'backupCount': 5,
            'formatter': 'standard',
            'encoding': 'utf-8',  # 设置默认编码
        },
    },
    # 配置用哪几种 handlers 来处理日志
    'loggers': {
        # 类型 为 django 处理所有类型的日志， 默认调用
        'django': {
            'handlers': ['default', 'console', 'error'],
            'level': 'INFO',
            'propagate': False
        },
        # log 调用时需要当作参数传入
        'log': {
            'handlers': ['error', 'info', 'console', 'default', 'warn'],
            'level': 'INFO',
            'propagate': True
        },
    }
}

# file upload path
# MEDIA_ROOT='/qxic/web/Mask_DP/'
MEDIA_ROOT = '/'
# calibrewb环境 local/ssh
# CALIBREWB_ENV = 'local'
# CALIBREWB_SSH_IP = '172.16.20.242'
# CALIBREWB_SSH_USR = 'root'
# CALIBREWB_SSH_PASSWD = 'QXeda@2019'

JOB_RUN = False

# LOGIN_URL
LOGIN_URL = '/system/login/'
PERMISSION_ERROR_URL = '/system/permission_error/'

INTERNAL_IPS = ['127.0.0.1', ]
DEBUG_TOOLBAR_CONFIG = {
    "JQUERY_URL": '//cdn.bootcss.com/jquery/2.2.4/jquery.min.js',
}

# open dictionary data rule
DATA_RULE_DICT_ENABLE = False

# 每秒访问次数,对使用频率进行过滤
MAX_REQUEST_PER_SECOND = 15
MES_RETRY_NUM = 3

# LDAP SERVER
LDAP = {
    'LDAP_SERVER_POOL': ['192.168.40.1'],  # 域控服务器ip地址
    'LDAP_SERVER_PORT': 389,  # 端口
    'ADMIN_DN': 'swmaster@qxic.net',  # 拥有查询权限的域账号
    'ADMIN_PASSWORD': 'RU6T/62U04XJ4',  # 对应的密码
    'SEARCH_BASE': 'ou=OAUser,dc=qxic,dc=net',
}

# e-mail config
E_MAIL_CONFIG = {
    'HOST': '192.168.40.11',
    'USER': 'neo.liu@qxic.net',
    'PASSWORD': '!qxic666666',
}

# Tooling Form Sheet
Tooling_Form_Sheet = {
    'Sheet_01': 'Product_Info',
    'Sheet_02': 'Tapeout_Info',
    'Sheet_03': 'Device_Info',
    'Sheet_04': 'CCD_Table',
    'Sheet_05': 'Boolean_Info',
    'Sheet_06': 'Layout_Info',
    # 'Sheet_07': 'MLR_Info',
    'Sheet_07': 'MLM_Info',
}
